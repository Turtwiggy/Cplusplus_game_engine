# This is a basic workflow to help you get started with Actions

name: Game2D

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ develop ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        include:
          - os: ubuntu-latest
            vcpkg-response-file: deps_vcpkg_x64-linux.txt
    env:
      buildDir: '${{ github.workspace }}/build'
      vcpkgDir: '${{ github.workspace }}/thirdparty/vcpkg'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: "Cache/Restore the vcpkg's build artifacts.."
        uses: actions/cache@v1
        with:
          path: ${{ env.vcpkgDir }}
          # The key will be different each time a different version of vcpkg is used, or different ports are installed.
          key: ${{ hashFiles( format('{0}/{1}', github.workspace, matrix.vcpkg-response-file )) }}-${{ hashFiles('.git/modules/vcpkg/HEAD') }}-${{ runner.os }}

      # Download, build vcpkg, install requested ports. If content is restored by the previous step, it is a no-op. 
      - name: "Run vcpkg"
        uses: lukka/run-vcpkg@v6
        with:
          # Just install vcpkg for now, do not install any ports in this step yet.
          setupOnly: true
          # Response file stored in source control, it provides the list of ports and triplet(s).
          vcpkgArguments: '@${{ github.workspace }}/${{ matrix.vcpkg-response-file }}'
          # Location of the vcpkg as submodule of the repository.
          vcpkgDirectory: ${{ env.vcpkgDir }}
          vcpkgTriplet: ${{ matrix.triplet }}
          
      - name: "Run CMake with Ninja, install dependencies with vcpkg, build with CMake"
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          useVcpkgToolchainFile: true
          cmakeAppendedArgs: '-GNinja'
          buildDirectory: ${{ env.buildDir }}
          buildWithCMakeArgs: '-- -v'

      - name: Prints output of run-vcpkg's task
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}' "


      # copy assets
      - name: Copy Assets Folder
        run: cp -r ${{ github.workspace }}/assets/2d  ${{ env.buildDir }}/

      # upload
      - name: Upload 64x artifact
        uses: actions/upload-artifact@v2
        with:
          name: Game2D
          path:  ${{ env.buildDir }}/